name: Provision of ec2 instance

on:
 push:
  branches:
   - main
 

jobs:
 build:
  runs-on: ubuntu-latest
  
  steps:
   - name: checkout the repo
     uses: actions/checkout@v2

   - name: set up python
     uses: actions/setup-python@v2
     with: 
      python-version: '3.10'
  
   - name: install depedencies package
     run: |
      python -m pip install --upgrade pip
      pip install boto3 ansible requests
      ansible-galaxy collection install amazon.aws

   - name: configure aws credentials 
     uses: aws-actions/configure-aws-credentials@v1
     with:
      aws-access-key-id: ${{secrets.PRIVATE_ACCESS_KEY}}
      aws-secret-access-key: ${{secrets.SECRET_ACCESS_KEY}}
      aws-region: ap-south-1
   
   - name: Setup terraform
     uses: hashicorp/setup-terraform@v1
   
   - name: Terraform init
     run: |
      cd terraform
      terraform init
   
   - name: Terraform apply
     run: |
      cd terraform
      terraform apply -auto-approve --var-file=environments/dev.tfvars

  
   - name: Create ssh key for instance
     run: |
      mkdir -p ~/.ssh
      echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_key.pem 
      chmod 600  ~/.ssh/ec2_key.pem 

   - name: Debug ssh key
     run: ls -l ~/.ssh/ec2_key.pem 

   - name: Run ansible playbook_dir
     run: | 
      ansible-playbook \
      -i ansible/inventory \
      -e "ec2_ssh_key_path=~/.ssh/ec2_key.pem" \
      ansible/playbooks/ec2-instance.yml 

   - name: Extract S3 bucket name form the inventory
     id: get-bucket
     run: |
      BUCKET_NAME=$(grep "frontend_bucket_name=" ansible/inventory | cut -d"=" -f2)
      echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT
  
   - name: Extract cloudfront distribution id  form the inventory
     id: get-cf-distribution
     run: |
      Cf_DISTRIBUTION_NAME=$(grep "frontend_bucket_name=" ansible/inventory | cut -d"=" -f2)
      echo "cloudfront_distribution_id=$Cf_DISTRIBUTION_NAME" >> $GITHUB_OUTPUT
  
   - name: Deploy Frontend
     run: |
      cd todo-tube
      aws s3 sync website/statics s3://prateek-todo-test
      aws s3 sync website/templates s3://prateek-todo-test
      
  
  env:
    PRIVATE_ACCESS_KEY: ${{secrets.PRIVATE_ACCESS_KEY}}
    SECRET_ACCESS_KEY: ${{secrets.SECRET_ACCESS_KEY}}
    EC2_SSH_PRIVATE_KEY: ~/.ssh/ec2_key.pem 
    ANSIBLE_HOST_KEY_CHECKING: False
    AWS_DEFAULT_REGION: ap-south-1



